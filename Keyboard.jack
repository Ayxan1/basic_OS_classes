// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

		
    /** Initializes the keyboard. */
    function void init() {
	return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
	return Memory.peek(24576);	
    }




    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
	var char keyInput;
	var char pressedKey;

	let keyInput = Keyboard.keyPressed();
	do Output.displayCursor();
	
	while(keyInput = 0){let keyInput = Keyboard.keyPressed();}
	
	let pressedKey = keyInput;
	
	while(~(keyInput = 0)){let keyInput = Keyboard.keyPressed();}
	
	do Output.printChar(pressedKey);

	return pressedKey;
    }





    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
	var String line;
	var char readedChar;

	let line = String.new(64);
	do Output.printString(message);

	while(true){
		let readedChar = Keyboard.readChar();

		if(readedChar = 128){ 
			do Output.println(); 
			return line;
		}
		
		if(readedChar = 129){
			do line.eraseLastChar();
			do Output.backSpace();
		}

		do line.appendChar(readedChar);				
	} 	 



	return line;
    }   





    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */

	
    function int readInt(String message) {
	var int number;
	var int decimalPlace;
	var String numberString;
	var int lenOfNumber;
	var int counter;
	var int isNegative;
 
	let number = 0;
	let decimalPlace = 1;


	let numberString = Keyboard.readLine(" ");	 
	let lenOfNumber = numberString.length();
	let counter = lenOfNumber;	
	
	if(numberString[0] = 45){
		let isNegative = 1;
	}
	
	while(counter > isNegative){
		let number = number + (numberString[counter] - 48) * decimalPlace;			
		let counter = counter - 1;
		let decimalPlace = decimalPlace*10;
	}

	if(isNegative = 1){	return -number;}
	return number;
    }




}
